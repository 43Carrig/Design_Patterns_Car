@startuml

abstract class CarFactory {

+ abstract Car buildCar(CarType model)
}

enum CarType {
    FORD_FIESTA,
    FORD_MONDEO,
    OPEL_ASTRA,
    OPEL_INSIGNIA
}

class FordFactory extends CarFactory {

    + Car buildCar(CarType model)
}

class OpelFactory extends CarFactory {

    + Car buildCar(CarType model)
}

class Fiesta extends Car {

    + Fiesta()
}

class Astra extends Car {

    + Astra()
}

class Car {

    - String model
    - double price
    - CarModification modifications
    - TransmissionBehaviour transmissionBehaviour
    - EngineBehaviour engineBehaviour

    + Car()

    + Car(String model, double price)

    + String getModel()

    + void setModel(String model)

    + double getPrice()

    + void setPrice(double price)
}
@enduml